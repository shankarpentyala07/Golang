1.Compile Go
The Go compiler takes a Go source file with a .go extension, processes it and produces an executable file without any extension. To compile a Go source file, test.go, type at the command line:

$ go build test.go
This will produce an executable file, test. To run test, type in the command line:

$ ./test

2. Running Files in Go
The Go compiler can execute Go code from the source file without producing an executable file. Instead of build, use run. To do this, type the following in the command line:
$ go run exampleFile.go
The go run command compiles the code (like go build) and executes it. Unlike go build, go run will NOT create an executable file in our current folder.

3. Packages in Go
A Go package is a directory made up of a collection of Go source files that are compiled together. This collection of reusable code typically contains functions related to a specific topic or concept. To use code from a particular package, we simply import it into our Go source file.

For example, to import the fmt package which contains functions for formatting input and output strings, we type the keyword import followed by the package name.
import "fmt"

4.Import Multiple Packages
To import multiple packages in a Go file, use the import keyword followed by the package name enclosed in double-quotes and repeat this statement for every imported package on its own line, or write a single import keyword to import multiple packages, one per line, in enclosed parentheses, (â€¦).

import "fmt"
import "math"
import "time"

or

import (
  "fmt"
  "math"
  "time"
)

5.
